{"version":3,"sources":["sebraeleme.resources.src.js"],"names":["tinybind","binders","autocomplete","bind","el","values","unbind","autocompleteInstance","destroy","routine","FLUIGC","highlight","minLength","maxTags","hint","searchTimeout","type","$","attr","tagClass","displayKey","templates","tag","suggestion","source","substringMatcher","err","data","errMessage","JSON","parse","responseText","message","e","toast","on","publish","itemAdded","ev","console","log","dispatchEvent","CustomEvent","item","strs","name","findMatches","q","cb","matches","substrRegex","RegExp","each","i","str","test","push","formatters","and","comparee","comparator","configure","prefix","preloadData","rootInterface","templateDelimiters","handler","target","event","binding","call","view","models"],"mappings":"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","file":"sebraeleme.resources.js","sourcesContent":["tinybind.binders.autocomplete = {\n  bind: function (el, values) {\n\n  },\n\n  unbind: function (el) {\n    this.autocompleteInstance.destroy();\n  },\n\n  routine: function (el, values) {\n\n    if (this.autocompleteInstance) { this.autocompleteInstance.destroy(); }\n\n    this.autocompleteInstance = FLUIGC.autocomplete(el, {\n      highlight: true,\n      minLength: 0,\n      maxTags: 1,\n      hint: true,\n      searchTimeout: 100,\n      type: $(el).attr('ac-type') || 'tagAutocomplete',\n      tagClass: $(el).attr('ac-tag-class') || 'tag-info',\n      displayKey: $(el).attr('ac-display-key'),\n      templates: {\n        tag: $(el).attr('ac-tag-template'),\n        suggestion: $(el).attr('ac-tag-template')\n      },\n      source: substringMatcher(values, $(el).attr('ac-display-key')),\n    }, function (err, data) {\n      if (err) {\n        try {\n          errMessage = JSON.parse(err.responseText.message);\n          errMessage = errMessage.message ? err.responseText.message : err.responseText;\n        } catch (e) {\n          errMessage = 'Não foi possível listar os dados';\n        }\n        FLUIGC.toast({\n          message: errMessage,\n          type: 'danger'\n        });\n      }\n    });\n\n    this.autocompleteInstance.on('fluig.autocomplete.itemAdded', this.publish);\n  },\n};\n\nitemAdded = (ev, el) => {\n  console.log(ev, el);\n  this.dispatchEvent(new CustomEvent('itemchanged', { 'item': ev.item }));\n\n  // new CustomEvent('itemchanged', { 'item': el.item })\n};\nsubstringMatcher = (strs, name) => {\n\n  return function findMatches(q, cb) {\n    var matches, substrRegex;\n\n    matches = [];\n\n    substrRegex = new RegExp(q, 'i');\n\n    $.each(strs, function (i, str) {\n      if (substrRegex.test(str[name])) {\n        matches.push(str);\n      }\n    });\n    cb(matches);\n  };\n};\n;tinybind.formatters.and = function (comparee, comparator) {\n  return comparee && comparator;\n};;tinybind.configure({\n\n  // Attribute prefix in templates\n  prefix: 'lm',\n\n  // Preload templates with initial data on bind\n  preloadData: true,\n\n  // Root sightglass interface for keypaths\n  rootInterface: '.',\n\n  // Template delimiters for text bindings\n  templateDelimiters: ['{', '}'],\n\n  // Augment the event handler of the on-* binder\n  handler: function(target, event, binding) {\n    this.call(target, event, binding.view.models);\n  }\n\n});"]}